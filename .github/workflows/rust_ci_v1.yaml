
# Copyright (C) 2023 Kendall Tauser
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

---

name: Rust CI
on: 
  workflow_call:
    inputs:
      APP_DIR:
        description: Specify the relative directory where your application lives in the repository.
        default: ""
        required: false
        type: string
      CI_SKIP:
        description: Specify stages of CI to skip using /<stage>/ syntax.
        default: ""
        required: false
        type: string

permissions:
  contents: read

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    if: "!contains(inputs.CI_SKIP, '/build/')"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-rust-
    - name: Set Directory
      if: ${{ inputs.APP_DIR != '' }}
      run: cd ${{ inputs.APP_DIR }}
    - run: cargo run

  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    if: "!contains(inputs.CI_SKIP, '/unit-test/')"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-rust-
    - name: Set Directory
      if: ${{ inputs.APP_DIR != '' }}
      run: cd ${{ inputs.APP_DIR }}
    - run: cargo test

  lint:
    name: lint
    runs-on: ubuntu-latest
    if: "!contains(inputs.CI_SKIP, '/lint/')"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-rust-
    - name: Set Directory
      if: ${{ inputs.APP_DIR != '' }}
      run: cd ${{ inputs.APP_DIR }}
    - name: Lint
      run: test -z "$(cargo fmt --check)"
